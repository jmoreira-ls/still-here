import { utils, Wallet } from "zksync-web3";
import * as ethers from "ethers";
import { HardhatRuntimeEnvironment } from "hardhat/types";
import { Deployer } from "@matterlabs/hardhat-zksync-deploy";

export default async function (hre: HardhatRuntimeEnvironment) {
  const wallet = new Wallet("<PRIVATE_KEY>");
  const deployer = new Deployer(hre, wallet);
  const factoryArtifact = await deployer.loadArtifact("WFactory");
  const wArtifact = await deployer.loadArtifact("Wallnut");

  // Deposit some funds to L2 in order to be able to perform L2 transactions.
  // You can remove the depositing step if the `wallet` has enough funds on zkSync
  // const depositAmount = ethers.utils.parseEther("5");
  // const depositHandle = await deployer.zkWallet.deposit({
    // to: deployer.zkWallet.address,
    // token: utils.ETH_ADDRESS,
    // amount: depositAmount,
  // });
  // await depositHandle.wait();

  // Getting the bytecodeHash of the account
  const bytecodeHash = utils.hashBytecode(wArtifact.bytecode);

  const factory = await deployer.deploy(factoryArtifact, [bytecodeHash], undefined, [
    // Since the factory requires the code of the multisig to be available,
    // we should pass it here as well.
    wArtifact.bytecode,
  ]);

  console.log(`W factory address: ${factory.address}`);
}
